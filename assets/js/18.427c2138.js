(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{442:function(t,s,e){"use strict";e.r(s);var n=e(0),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("在Java系统和 MySQL 进行交互之前，MySQL 驱动会帮我们建立好连接，然后我们只需要发送 SQL 语句就可以执行 CRUD 了。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210122102908891.png",alt:"在这里插入图片描述"}}),t._v("\n一次 SQL 请求就会建立一个连接，多个请求就会建立多个连接。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021012210292192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RfQV9JX0hfQV9P,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\nJava 系统在通过 MySQL 驱动和 MySQL 数据库连接的时候是基于 TCP/IP 协议的，所以如果每个请求都是新建连接和销毁连接，那这样势必会造成不必要的浪费和性能的下降。使用数据库连接池可解决此问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("数据库连接池 维护一定的连接数，方便系统获取连接，使用就去池子中获取，用完放回去就可以了，我们不需要关心连接的创建与销毁，也不需要关心线程池是怎么去维护这些连接的。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210122102955358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RfQV9JX0hfQV9P,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n我们已经知道的是我们的系统在访问  MySQL  数据库的时候，建立的连接并不是每次请求都会去创建的，而是从数据库连接池中去获取，这样就解决了因为反复的创建和销毁连接而带来的性能损耗问题了。业务系统是并发的，但是 MySQL  的数据库的接受请求还只是一个啊。")]),t._v(" "),s("p",[t._v("其实MySQL 的架构体系中也已经提供了这样的一个池子，也是数据库连池。双方都是通过数据库连接池来管理各个连接的，这样一方面线程之前不需要是争抢连接，更重要的是不需要反复的创建的销毁连接.\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210122103014920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RfQV9JX0hfQV9P,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n1、Mysql线程接到请求，获取到sql语句转交sql接口处理\n2、解析器对sql语句进行解析，翻译成mysql能认识\n3、查询缓存主要用来缓存我们所执行的 SELECT 语句以及该语句的结果集。(MySQL 8.0 版本后移除)\n4、mysql对解析出来sql语句会进行优化，选择最优的查询路径\n5、得出最优路径，由执行器调用存储引擎接口，执行sql语句。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210122110450488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RfQV9JX0hfQV9P,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210122112008688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RfQV9JX0hfQV9P,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6920076107609800711#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("码海：头条二面：详述一条 SQL 的执行过程"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/weter_drop/article/details/93386581?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161128447716780261971166%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161128447716780261971166&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-6-93386581.first_rank_v2_pc_rank_v29&utm_term=sql%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B&spm=1018.2226.3001.4187",target:"_blank",rel:"noopener noreferrer"}},[t._v("ratelfu：一条SQL语句在MySQL中执行过程全解析"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);