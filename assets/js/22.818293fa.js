(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{444:function(_,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var _=this,e=_._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"mysql刷脏页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql刷脏页"}},[_._v("#")]),_._v(" MySQL刷脏页")]),_._v(" "),e("p",[e("code",[_._v("InnoDB")]),_._v("在处理更新语句的时候，只做了写日志这一个磁盘操作。这个日志叫作 "),e("code",[_._v("redo log")]),_._v("（重做日志），在更新内存写完 "),e("code",[_._v("redo log")]),_._v("后，就返回给客户端，本次更新成功。")]),_._v(" "),e("p",[_._v("内存里的数据写入磁盘的过程，术语就是 "),e("code",[_._v("flush")]),_._v("。")]),_._v(" "),e("p",[e("strong",[_._v("当内存数据页跟磁盘数据页内容不一致的时候，我们称这个内存页为“脏页”。内存数据写入到磁盘后，内存和磁盘上的数据页的内容就一致了，称为“干净页”")]),_._v(" 。")]),_._v(" "),e("blockquote",[e("p",[_._v("什么情况会引发数据库的 "),e("code",[_._v("flush")]),_._v("过程呢？")])]),_._v(" "),e("p",[_._v("1、"),e("code",[_._v("InnoDB")]),_._v("的 "),e("code",[_._v("redo log")]),_._v("写满了。这时候系统会停止所有更新操作，把 "),e("code",[_._v("checkpoint")]),_._v("往前推进，"),e("code",[_._v("redo log")]),_._v("留出空间可以继续写。")]),_._v(" "),e("p",[_._v("2、系统内存不足。当需要新的内存页，而内存不够用的时候，就要淘汰一些数据页，空出内存给别的数据页使用。如果淘汰的是“脏页”，就要先将脏页写到磁盘。")]),_._v(" "),e("p",[_._v("3、"),e("code",[_._v("MySQL")]),_._v("认为系统“空闲”的时候。")]),_._v(" "),e("p",[_._v("4、"),e("code",[_._v("MySQL")]),_._v("正常关闭的情况。这时候，"),e("code",[_._v("MySQL")]),_._v("会把内存的脏页都 "),e("code",[_._v("flush")]),_._v("到磁盘上，这样下次 "),e("code",[_._v("MySQL")]),_._v("启动的时候，就可以直接从磁盘上读数据，启动速度会很快。")]),_._v(" "),e("h1",{attrs:{id:"innodb-刷脏页的控制策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#innodb-刷脏页的控制策略"}},[_._v("#")]),_._v(" InnoDB 刷脏页的控制策略")]),_._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[_._v("-- 当刷新脏数据时，控制MySQL每秒执行的写IO量")]),_._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("select")]),_._v(" @"),e("span",{pre:!0,attrs:{class:"token variable"}},[_._v("@innodb_io_capacity")]),_._v("\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br"),e("span",{staticClass:"line-number"},[_._v("2")]),e("br")])]),e("p",[e("code",[_._v("innodb_io_capacity")]),_._v("值建议设置成磁盘的 "),e("code",[_._v("IOPS")]),_._v("。磁盘的 "),e("code",[_._v("IOPS")]),_._v("可以通过 "),e("code",[_._v("fio")]),_._v("这个工具来测试")]),_._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("fio -filename=$filename -direct=1 -iodepth 1 -thread -rw=randrw -ioengine=psync -bs=16k -size=500M -numjobs=10 -runtime=10 -group_reporting -name=mytest \n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("p",[e("strong",[_._v("控制刷脏页的速度，会参考哪些因素呢")]),_._v("?")]),_._v(" "),e("p",[e("code",[_._v("InnoDB")]),_._v("的刷盘速度要参考这两个因素：一个是脏页比例，一个是"),e("code",[_._v("redo log")]),_._v("写盘速度。")]),_._v(" "),e("p",[_._v("参数 "),e("code",[_._v("innodb_max_dirty_pages_pct")]),_._v("是脏页比例上限，默认值是 "),e("code",[_._v("75%")]),_._v("。"),e("code",[_._v("InnoDB")]),_._v("会根据当前的脏页比例（假设为 "),e("code",[_._v("M")]),_._v("），算出一个范围在 0 到 100 之间的数字，计算这个数字的伪代码类似这样：")]),_._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token constant"}},[_._v("F1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token constant"}},[_._v("M")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("if")]),_._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[_._v("M")]),e("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">=")]),_._v("innodb_max_dirty_pages_pct then\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("return")]),_._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[_._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("return")]),_._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[_._v("100")]),e("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),e("span",{pre:!0,attrs:{class:"token constant"}},[_._v("M")]),e("span",{pre:!0,attrs:{class:"token operator"}},[_._v("/")]),_._v("innodb_max_dirty_pages_pct"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br"),e("span",{staticClass:"line-number"},[_._v("2")]),e("br"),e("span",{staticClass:"line-number"},[_._v("3")]),e("br"),e("span",{staticClass:"line-number"},[_._v("4")]),e("br"),e("span",{staticClass:"line-number"},[_._v("5")]),e("br"),e("span",{staticClass:"line-number"},[_._v("6")]),e("br")])]),e("p",[e("code",[_._v("InnoDB")]),_._v("每次写入的日志都有一个序号，当前写入的序号跟 "),e("code",[_._v("checkpoint")]),_._v("对应的序号之间的差值，我们假设为 "),e("code",[_._v("N")]),_._v("。"),e("code",[_._v("InnoDB")]),_._v("会根据这个 "),e("code",[_._v("N")]),_._v(" 算出一个范围在 0 到 100 之间的数字，这个计算公式可以记为 "),e("code",[_._v("F2(N)")]),_._v("。"),e("code",[_._v("F2(N)")]),_._v(" 算法比较复杂，你只要知道"),e("code",[_._v("N")]),_._v(" 越大，算出来的值越大就好了。")]),_._v(" "),e("p",[_._v("然后，根据上述算得的 "),e("code",[_._v("F1(M)")]),_._v(" 和 "),e("code",[_._v("F2(N)")]),_._v(" 两个值，取其中较大的值记为 "),e("code",[_._v("R")]),_._v("，之后引擎就可以按照 "),e("code",[_._v("innodb_io_capacity")]),_._v("定义的能力乘以 "),e("code",[_._v("R%")]),_._v("来控制刷脏页的速度。")]),_._v(" "),e("p",[e("code",[_._v("InnoDB")]),_._v("会在后台刷脏页，而刷脏页的过程是要将内存页写入磁盘。所以，无论是你的查询语句在需要内存的时候可能要求淘汰一个脏页，还是由于刷脏页的逻辑会占用"),e("code",[_._v("IO")]),_._v(" 资源并可能影响到了你的更新语句，都可能是造成你从业务端感知到 "),e("code",[_._v("MySQL")]),_._v("“抖”了一下的原因。")]),_._v(" "),e("p",[_._v("要尽量避免这种情况，你就要合理地设置 "),e("code",[_._v("innodb_io_capacity")]),_._v("的值，并且 "),e("strong",[_._v("平时要多关注脏页比例，不要让它经常接近 75%")]),_._v(" 。")]),_._v(" "),e("p",[_._v("其中，脏页比例是通过"),e("code",[_._v("Innodb_buffer_pool_pages_dirty/Innodb_buffer_pool_pages_total")]),_._v("得到的，具体的命令参考下面的代码：")]),_._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("use performance_schema;\nselect VARIABLE_VALUE  from global_status where VARIABLE_NAME = 'Innodb_buffer_pool_pages_dirty';\nselect VARIABLE_VALUE  from global_status where VARIABLE_NAME = 'Innodb_buffer_pool_pages_total';\nselect (select VARIABLE_VALUE  from global_status where VARIABLE_NAME = 'Innodb_buffer_pool_pages_dirty'\n       ) / (select VARIABLE_VALUE  from global_status where VARIABLE_NAME = 'Innodb_buffer_pool_pages_total');\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br"),e("span",{staticClass:"line-number"},[_._v("2")]),e("br"),e("span",{staticClass:"line-number"},[_._v("3")]),e("br"),e("span",{staticClass:"line-number"},[_._v("4")]),e("br"),e("span",{staticClass:"line-number"},[_._v("5")]),e("br")])]),e("p",[_._v("一旦一个查询请求需要在执行过程中先 "),e("code",[_._v("flush")]),_._v("掉一个脏页时，这个查询就可能要比平时慢了。而 "),e("code",[_._v("MySQL")]),_._v("中的一个机制，可能让你的查询会更慢：在准备刷一个脏页的时候，如果这个数据页旁边的数据页刚好是脏页，就会把这个“邻居”也带着一起刷掉；而且这个把“邻居”拖下水的逻辑还可以继续蔓延，也就是对于每个邻居数据页，如果跟它相邻的数据页也还是脏页的话，也会被放到一起刷。")]),_._v(" "),e("p",[_._v("在 "),e("code",[_._v("InnoDB")]),_._v("中，"),e("code",[_._v("innodb_flush_neighbors")]),_._v("参数就是用来控制这个行为的，值为 1 的时候会有上述的“连坐”机制，值为 0 时表示不找邻居，自己刷自己的。")]),_._v(" "),e("p",[_._v("找“邻居”这个优化在机械硬盘时代是很有意义的，可以减少很多随机"),e("code",[_._v("IO")]),_._v("。机械硬盘的随机 "),e("code",[_._v("IOPS")]),_._v("一般只有几百，相同的逻辑操作减少随机"),e("code",[_._v("IO")]),_._v("就意味着系统性能的大幅度提升。")]),_._v(" "),e("p",[_._v("而如果使用的是 "),e("code",[_._v("SSD")]),_._v("这类 "),e("code",[_._v("IOPS")]),_._v("比较高的设备的话，我就建议你把 "),e("code",[_._v("innodb_flush_neighbors")]),_._v("的值设置成 0。因为这时候 "),e("code",[_._v("IOPS")]),_._v("往往不是瓶颈，而“只刷自己”，就能更快地执行完必要的刷脏页操作，减少 SQL 语句响应时间。")]),_._v(" "),e("p",[_._v("在"),e("code",[_._v("MySQL 8.0")]),_._v(" 中，"),e("code",[_._v("innodb_flush_neighbors")]),_._v("参数的默认值已经是 0 了。")])])}),[],!1,null,null,null);e.default=a.exports}}]);